{"version":3,"file":"static/js/766.7c97150c.chunk.js","mappings":"oNAiFMA,EAAqB,CACzBC,iBAAAA,EAAAA,IAGF,WAAeC,EAAAA,EAAAA,KAZS,SAACC,GACvB,IAAQC,EAAsCD,EAAtCC,YAAaC,EAAyBF,EAAzBE,qBAIrB,MAAO,CAAEC,WAHcF,EAAfE,WAGaC,OAFgBF,EAA7BE,OAEqBC,iBAFQH,EAArBG,oBASsBR,EAAxC,EAhFe,SAACS,GACd,IAAMC,EAAYD,EAAMR,iBAAiBQ,EAAMD,kBAC/C,QAAkBG,IAAdD,EAA2B,OAAO,KAEtC,IAAME,EAAmB,SAACC,GACxBJ,EAAMF,OAAOO,KAAK,aAAc,CAC9BC,OAAQ,eACRC,SAAUN,EAAUM,SACpBC,MAAO,CACLC,eAAgB,OAChBD,MAAOJ,EAAMM,OAAOF,UAmB1B,OACE,+BACE,UAAC,IAAD,CAAKG,UAAU,OAAf,WACE,SAAC,IAAD,CAAKC,GAAI,EAAT,UACE,2BAGE,sBAAUD,UAAU,iBAApB,WACE,mBAAQA,UAAU,6CAAlB,2BACA,UAAC,IAAD,CAAKC,GAAI,EAAT,WACE,iBAAKD,UAAU,aAAf,WACE,kBAAOA,UAAU,mBAAmBE,KAAK,QAAQC,KAAK,aAAaN,MAAM,OAAOO,SAAUZ,EAAkBa,QAAmC,SAA1Bf,EAAUgB,OAAOC,QACtI,kBAAOP,UAAU,mBAAjB,sBAEF,iBAAKA,UAAU,aAAf,WACE,kBAAOA,UAAU,mBAAmBE,KAAK,QAAQC,KAAK,aAAaN,MAAM,MAAMO,SAAUZ,EAAkBa,QAAmC,QAA1Bf,EAAUgB,OAAOC,QACrI,kBAAOP,UAAU,mBAAjB,qBAEF,iBAAKA,UAAU,aAAf,WACE,kBAAOA,UAAU,mBAAmBE,KAAK,QAAQC,KAAK,aAAaN,MAAM,MAAMO,SAAUZ,EAAkBa,QAAmC,QAA1Bf,EAAUgB,OAAOC,QACrI,kBAAOP,UAAU,mBAAjB,+BAQV,SAAC,IAAD,CAAKC,GAAI,EAAT,UACE,iBAAKD,UAAU,aAAf,WACE,2DACA,kBAAOA,UAAU,eAAeE,KAAK,OAAOE,SA7CzB,SAACX,GAC5B,IAAMe,EAAWC,OAAOhB,EAAMM,OAAOF,OACjCY,OAAOC,UAAUF,IACnBnB,EAAMF,OAAOO,KAAK,aAAc,CAC9BC,OAAQ,eACRC,SAAUN,EAAUM,SACpBC,MAAO,CACLC,eAAgB,WAChBD,MAAOW,MAqCuEX,MAAOP,EAAUgB,OAAOE","sources":["components/configurebot/Combat.jsx"],"sourcesContent":["import { Fragment } from 'react'\nimport { Col, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getBotBySocketId } from '../../actions/botsAction'\n\nconst Combat = (props) => {\n  const botConfig = props.getBotBySocketId(props.selectedSocketId)\n  if (botConfig === undefined) { return null }\n\n  const handleChangeMode = (event) => {\n    props.socket.emit('sendAction', {\n      action: 'changeConfig',\n      socketId: botConfig.socketId,\n      value: {\n        configToChange: 'mode',\n        value: event.target.value\n      }\n    })\n  }\n\n  const handleChangeDistance = (event) => {\n    const distance = Number(event.target.value)\n    if (Number.isInteger(distance)) {\n      props.socket.emit('sendAction', {\n        action: 'changeConfig',\n        socketId: botConfig.socketId,\n        value: {\n          configToChange: 'distance',\n          value: distance\n        }\n      })\n    }\n  }\n\n  return (\n    <>\n      <Row className='mb-5'>\n        <Col xs={6}>\n          <form>\n\n\n            <fieldset className='form-group row'>\n              <legend className='col-form-label col-sm-4 float-sm-left pt-0'>Combat Mode?</legend>\n              <Col xs={8}>\n                <div className='form-check'>\n                  <input className='form-check-input' type='radio' name='combatMode' value='none' onChange={handleChangeMode} checked={botConfig.config.mode === 'none'} />\n                  <label className='form-check-label'>None</label>\n                </div>\n                <div className='form-check'>\n                  <input className='form-check-input' type='radio' name='combatMode' value='pve' onChange={handleChangeMode} checked={botConfig.config.mode === 'pve'} />\n                  <label className='form-check-label'>PVE</label>\n                </div>\n                <div className='form-check'>\n                  <input className='form-check-input' type='radio' name='combatMode' value='pvp' onChange={handleChangeMode} checked={botConfig.config.mode === 'pvp'} />\n                  <label className='form-check-label'>PVP</label>\n                </div>\n\n              </Col>\n            </fieldset>\n\n          </form>\n        </Col>\n        <Col xs={3}>\n          <div className='form-group'>\n            <label>Distance for start combat?</label>\n            <input className='form-control' type='text' onChange={handleChangeDistance} value={botConfig.config.distance} />\n          </div>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = (reducers) => {\n  const { botsReducer, configurationReducer } = reducers\n  const { botsOnline } = botsReducer\n  const { socket, selectedSocketId } = configurationReducer\n\n  return { botsOnline, socket, selectedSocketId }\n}\n\nconst mapDispatchToProps = {\n  getBotBySocketId\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Combat)\n"],"names":["mapDispatchToProps","getBotBySocketId","connect","reducers","botsReducer","configurationReducer","botsOnline","socket","selectedSocketId","props","botConfig","undefined","handleChangeMode","event","emit","action","socketId","value","configToChange","target","className","xs","type","name","onChange","checked","config","mode","distance","Number","isInteger"],"sourceRoot":""}