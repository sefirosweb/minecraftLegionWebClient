{"version":3,"file":"static/js/912.5e9a79bb.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/CardGroup.js","components/Canvas.jsx","utils/windowSlotsCoords.js","components/DrawChest.jsx","pages/Chests.jsx","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('card-group');","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Canvas = ({ draw, height, width }) => {\n  const canvas = React.useRef();\n  React.useEffect(() => {\n    const context = canvas.current.getContext(\"2d\");\n    draw(context);\n  });\n  return <canvas ref={canvas} height={height} width={width} />;\n};\nCanvas.propTypes = {\n  draw: PropTypes.func.isRequired,\n  height: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n};\nexport default Canvas;\n","const windowSlotsCoords = {\n  inventory: {},\n  chest: {},\n  \"large-chest\": {},\n  \"crafting-table\": {},\n  furnace: {},\n};\n\nwindowSlotsCoords.inventory = {\n  // Crafting slots\n  0: [307, 55],\n  1: [195, 35],\n  2: [231, 35],\n  3: [195, 71],\n  4: [231, 71],\n\n  5: [15, 15], // Helmet\n  9: [15, 167], // Inventory\n  18: [15, 203], // Inventory\n  27: [15, 239], // Inventory\n  36: [15, 283], // Tool bar\n  45: [153, 123], // Left hand\n};\n// Add armor slots (5 - 8)\nfor (let i = 5 + 1; i <= 8; i++) {\n  windowSlotsCoords.inventory[i] = [\n    windowSlotsCoords.inventory[i - 1][0],\n    windowSlotsCoords.inventory[i - 1][1] + 36,\n  ];\n}\n// Add inventory and tool bar slots\nfor (let i = 9; i < 5 * 9; i += 9) {\n  for (let j = 1; j <= 8; j++) {\n    windowSlotsCoords.inventory[i + j] = [\n      windowSlotsCoords.inventory[i][0] + 36 * j,\n      windowSlotsCoords.inventory[i][1],\n    ];\n  }\n}\n\nwindowSlotsCoords.chest = {\n  // Chest slots\n  0: [15, 35],\n  9: [15, 71],\n  18: [15, 107],\n  // Inventory slots\n  27: [15, 169],\n  36: [15, 205],\n  45: [15, 241],\n  // Tool bar slots\n  54: [15, 285],\n};\nfor (let i = 0; i < 7 * 9; i += 9) {\n  for (let j = 1; j <= 8; j++) {\n    windowSlotsCoords.chest[i + j] = [\n      windowSlotsCoords.chest[i][0] + 36 * j,\n      windowSlotsCoords.chest[i][1],\n    ];\n  }\n}\n\nwindowSlotsCoords[\"large-chest\"] = {\n  // Chest slots\n  0: [15, 35],\n  9: [15, 71],\n  18: [15, 107],\n  27: [15, 143],\n  36: [15, 179],\n  45: [15, 215],\n  // Inventory slots\n  54: [15, 277],\n  63: [15, 313],\n  72: [15, 349],\n  // Tool bar slots\n  81: [15, 393],\n};\nfor (let i = 0; i < 10 * 9; i += 9) {\n  for (let j = 1; j <= 8; j++) {\n    windowSlotsCoords[\"large-chest\"][i + j] = [\n      windowSlotsCoords[\"large-chest\"][i][0] + 36 * j,\n      windowSlotsCoords[\"large-chest\"][i][1],\n    ];\n  }\n}\n\nwindowSlotsCoords[\"crafting-table\"] = {\n  0: [239, 61], // Output slot\n  1: [59, 33], // Input slots\n  4: [59, 69], // Input slots\n  7: [59, 105], // Input slots\n  // Inventory slots\n  10: [15, 167],\n  19: [15, 203],\n  28: [15, 239],\n  // Tool bar slots\n  37: [15, 283],\n};\n// Add input slots (1-9)\nfor (let i = 1; i < 3 * 3; i += 3) {\n  for (let j = 1; j <= 2; j++) {\n    windowSlotsCoords[\"crafting-table\"][i + j] = [\n      windowSlotsCoords[\"crafting-table\"][i][0] + 36 * j,\n      windowSlotsCoords[\"crafting-table\"][i][1],\n    ];\n  }\n}\n// Add inventory slots (10-45)\nfor (let i = 10; i < 5 * 9; i += 9) {\n  for (let j = 1; j <= 8; j++) {\n    windowSlotsCoords[\"crafting-table\"][i + j] = [\n      windowSlotsCoords[\"crafting-table\"][i][0] + 36 * j,\n      windowSlotsCoords[\"crafting-table\"][i][1],\n    ];\n  }\n}\n\nwindowSlotsCoords.furnace = {\n  0: [111, 33], // Input slot\n  1: [111, 105], // Fuel slot\n  2: [223, 61], // Output slot\n  // Inventory slots\n  3: [15, 167],\n  12: [15, 203],\n  21: [15, 239],\n  // Tool bar slots\n  30: [15, 283],\n};\n// Add inventory slots (3-38)\nfor (let i = 3; i < 4 * 9; i += 9) {\n  for (let j = 1; j <= 8; j++) {\n    windowSlotsCoords.furnace[i + j] = [\n      windowSlotsCoords.furnace[i][0] + 36 * j,\n      windowSlotsCoords.furnace[i][1],\n    ];\n  }\n}\n\nexport default windowSlotsCoords;\n","import React from 'react'\n// import { mcAssets } from '../utils/mc';\nimport smallChest from \"../images/smallChest.png\";\nimport largeChest from \"../images/largeChest.png\";\nimport Canvas from \"./Canvas\";\nimport windowSlotsCoords from '../utils/windowSlotsCoords';\nimport { Card, Col, Row, Button } from 'react-bootstrap';\n\n\nconst DrawChest = ({ chest, deleteChest }) => {\n\n    const draw = (ctx) => {\n        const chestType = chest.slots.length === 27 ? 'chest' : 'large-chest'\n        const base_image = new Image();\n        base_image.src = chest.slots.length === 27 ? smallChest : largeChest\n        base_image.onload = () => ctx.drawImage(base_image, 0, 0);\n\n        for (const item in chest.slots) {\n            if (!chest.slots[item]) continue;\n\n            const inventorySlot =\n                windowSlotsCoords[chestType][chest.slots[item].slot];\n\n            // const itemInfo = chest.slots[item];\n            // const texture = mcAssets.textureContent[itemInfo.name].texture;\n\n            const itemImage = new Image();\n            itemImage.src = ''; //texture;\n\n            itemImage.onload = function () {\n                // Draw item image\n                ctx.imageSmoothingEnabled = false;\n                ctx.drawImage(itemImage, inventorySlot[0], inventorySlot[1], 32, 32);\n\n                // Draw item count\n                if (chest.slots[item].count > 1) {\n                    ctx.font = \"20px monospace\";\n                    ctx.fillStyle = \"black\";\n                    ctx.textAlign = \"end\";\n                    ctx.fillText(\n                        chest.slots[item].count,\n                        inventorySlot[0] + 33,\n                        inventorySlot[1] + 31\n                    );\n                    ctx.fillStyle = \"white\";\n                    ctx.fillText(\n                        chest.slots[item].count,\n                        inventorySlot[0] + 32,\n                        inventorySlot[1] + 30\n                    );\n                }\n            };\n        }\n    }\n\n    const drawChestText = () => {\n        return chest.slots.map((i, key) => {\n            if (!i) return '';\n            return <div key={key}>{i.name} x {i.count}</div>\n        })\n    }\n\n    return (\n        <div>\n            <Card className='m-3'>\n                <Card.Body>\n                    <Card.Title>Chests</Card.Title>\n                    <Card.Text>\n                        <Row>\n                            <Col xs={6}>\n                                <span>\n                                    Dimension: {chest.position.dimension}\n                                </span>\n                            </Col>\n                            <Col xs={2}>\n                                <span className='badge bg-primary text-white'>\n                                    X: {chest.position.x}\n                                </span>\n                            </Col>\n                            <Col xs={2}>\n                                <span className='badge bg-warning text-dark'>\n                                    Y: {chest.position.y}\n                                </span>\n                            </Col>\n                            <Col xs={2}>\n                                <span className='badge bg-secondary text-white'>\n                                    Z: {chest.position.z}\n                                </span>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className='mt-2'>\n                                <Button\n                                    variant='danger'\n                                    onClick={deleteChest}\n                                >\n                                    Delete Chest\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Card.Text>\n                    <Card.Text>\n                        {drawChestText()}\n                    </Card.Text>\n                    <Canvas\n                        draw={draw}\n                        width={352}\n                        height={chest.slots.length === 27 ? 150 : 260}\n                    />\n                </Card.Body>\n            </Card>\n        </div>\n\n    )\n}\n\nexport default DrawChest","import React from \"react\";\nimport { Card, CardGroup } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport DrawChest from \"../components/DrawChest\";\n\nconst Chests = ({ chests, socket }) => {\n\n  const deleteChest = (key, chest) => {\n    console.log(chests)\n    if (window.confirm(\"Confirm delete chest?\") === true) {\n      const newChests = { ...chests }\n      delete newChests[key]\n      console.log(newChests)\n\n      socket.emit('sendAction', {\n        action: 'setChests',\n        value: newChests\n      })\n    }\n\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <Card.Title>Chests</Card.Title>\n          <Card.Text>Contain all chests in memory of server</Card.Text>\n          <CardGroup>\n            {Object.entries(chests).map((entry) => {\n                 const key = entry[0]\n                 const chest = entry[1]\n              return <DrawChest key={key} chest={chest} deleteChest={() => deleteChest(key, chest)} />;\n            })}\n          </CardGroup>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nconst mapStateToProps = (reducers) => {\n  const { botsReducer, configurationReducer } = reducers;\n  const { socket } = configurationReducer\n  const { chests } = botsReducer;\n  return { chests, socket };\n};\n\nexport default connect(mapStateToProps)(Chests);\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["createWithBsPrefix","draw","height","width","canvas","React","context","current","getContext","ref","windowSlotsCoords","inventory","chest","furnace","i","j","deleteChest","Card","className","Row","Col","xs","position","dimension","x","y","z","Button","variant","onClick","slots","map","key","name","count","ctx","chestType","length","base_image","Image","src","smallChest","largeChest","onload","drawImage","item","inventorySlot","slot","itemImage","imageSmoothingEnabled","font","fillStyle","textAlign","fillText","connect","reducers","botsReducer","socket","configurationReducer","chests","CardGroup","Object","entries","entry","console","log","window","confirm","newChests","emit","action","value","CardImg","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","bg","text","border","body","defaultProps","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}