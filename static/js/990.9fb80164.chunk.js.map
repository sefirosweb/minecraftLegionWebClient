{"version":3,"file":"static/js/990.9fb80164.chunk.js","mappings":"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","sources":["components/configurebot/FarmArea.jsx","components/configurebot/BreederJob.jsx","components/forms/LayerCoords.jsx"],"sourcesContent":["import { Button, Col, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport LayerCoords from '../forms/LayerCoords'\n\nconst FarmArea = (props) => {\n\n  const { farmArea } = props\n\n  const handleChange = (event, type) => {\n    const copyFarm = { ...props.farmArea }\n    copyFarm[type] = event.target.value\n\n    props.socket.emit('sendAction', {\n      action: 'changeConfig',\n      socketId: props.selectedSocketId,\n      value: {\n        configToChange: 'changeFarmArea',\n        value: {\n          id: props.id,\n          farmArea: copyFarm\n        }\n      }\n    })\n  }\n\n  const handleDeleteFarmArea = (event) => {\n    props.socket.emit('sendAction', {\n      action: 'changeConfig',\n      socketId: props.selectedSocketId,\n      value: {\n        configToChange: 'deleteFarmArea',\n        value: props.id\n      }\n    })\n  }\n\n  return (\n    <div className='p-3 mb-3 border rounded'>\n\n      <LayerCoords\n        area={farmArea}\n        onChange={handleChange}\n      />\n\n      <Row className='mt-3'>\n        <Col>\n          <Button variant='danger' onClick={handleDeleteFarmArea}>\n            Delete Area\n          </Button>\n        </Col>\n      </Row>\n    </div >\n\n  )\n}\n\nconst mapStateToProps = (reducers) => {\n  const { configurationReducer } = reducers\n  const { socket, selectedSocketId } = configurationReducer\n  return { socket, selectedSocketId }\n}\n\nexport default connect(mapStateToProps, null)(FarmArea)\n","import { Col, Form, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getBotBySocketId } from '../../actions/botsAction'\nimport FarmArea from './FarmArea'\n\nconst BreederJob = (\n  {\n    id,\n    socket,\n    botsOnline,\n    selectedSocketId,\n    getBotBySocketId,\n  }\n) => {\n\n  const botConfig = botsOnline.find((e) => { return e.socketId === selectedSocketId })\n  if (botConfig === undefined) { return null }\n\n  const handleInsertNewFarmArea = (event) => {\n    socket.emit('sendAction', {\n      action: 'changeConfig',\n      socketId: botConfig.socketId,\n      value: {\n        configToChange: 'insertNewFarmArea'\n      }\n    })\n  }\n\n  const handleUpdateAnimal = (animal, event) => {\n    const value = event.target.value\n    console.log(value)\n    socket.emit('sendAction', {\n      action: 'changeConfig',\n      socketId: selectedSocketId,\n      value: {\n        configToChange: 'changeAnimalValue',\n        value: {\n          id: id,\n          animal,\n          value\n        }\n      }\n    })\n  }\n\n  const renderFarmArea = () => {\n    return botConfig.config.farmAreas.map((farmArea, index) => {\n      return (\n        <FarmArea key={index} id={index} farmArea={farmArea} />\n      )\n    })\n  }\n\n  return (\n    <>\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Animal max by area</h4>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-3\">\n        <Form.Group as={Col} sm=\"12\" md=\"6\" lg=\"4\" controlId=\"validationCustomFeed\">\n          <Form.Label>Feed every seconds</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.seconds}\n            onChange={(e) => handleUpdateAnimal('seconds', e)}\n          />\n        </Form.Group>\n      </Row>\n\n      <Row className=\"mb-3\">\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomCow\">\n          <Form.Label>Cow</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.cow}\n            onChange={(e) => handleUpdateAnimal('cow', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomSheep\">\n          <Form.Label>Sheep</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.sheep}\n            onChange={(e) => handleUpdateAnimal('sheep', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomChicken\">\n          <Form.Label>Chicken</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.chicken}\n            onChange={(e) => handleUpdateAnimal('chicken', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\"\n          controlId=\"validationCustomHorse\">\n          <Form.Label>Horse</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.horse}\n            onChange={(e) => handleUpdateAnimal('horse', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\"\n          controlId=\"validationCustomDonkey\">\n          <Form.Label>Donkey</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.donkey}\n            onChange={(e) => handleUpdateAnimal('donkey', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomLlama\">\n          <Form.Label>Llama</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.llama}\n            onChange={(e) => handleUpdateAnimal('llama', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomFox\">\n          <Form.Label>Fox</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.fox}\n            onChange={(e) => handleUpdateAnimal('fox', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomBee\">\n          <Form.Label>Bee</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.bee}\n            onChange={(e) => handleUpdateAnimal('bee', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomPanda\">\n          <Form.Label>Panda</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.panda}\n            onChange={(e) => handleUpdateAnimal('panda', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomWolf\">\n          <Form.Label>Wolf</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.wolf}\n            onChange={(e) => handleUpdateAnimal('wolf', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomCat\">\n          <Form.Label>Cat</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.cat}\n            onChange={(e) => handleUpdateAnimal('cat', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomRabbit\">\n          <Form.Label>Rabbit</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.rabbit}\n            onChange={(e) => handleUpdateAnimal('rabbit', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomPig\">\n          <Form.Label>Pig</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.pig}\n            onChange={(e) => handleUpdateAnimal('pig', e)}\n          />\n        </Form.Group>\n\n        <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\" controlId=\"validationCustomTurtles\">\n          <Form.Label>Turtles</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={botConfig.config.farmAnimal.turtles}\n            onChange={(e) => handleUpdateAnimal('turtles', e)}\n          />\n        </Form.Group>\n\n      </Row >\n\n      <Row className=\"mb-3\">\n        <Col>\n          <h4>Insert new farm area</h4>\n          {renderFarmArea()}\n        </Col>\n      </Row>\n\n\n      <Row className='mb-5'>\n        <Col>\n          <button type='button' className='btn btn-success' onClick={handleInsertNewFarmArea}>Insert New Farm Area</button>\n        </Col>\n      </Row>\n\n    </>\n  )\n}\n\nconst mapStateToProps = (reducers) => {\n  const { configurationReducer, botsReducer } = reducers\n  const { socket, selectedSocketId } = configurationReducer\n  const { botsOnline } = botsReducer\n\n  return { socket, selectedSocketId, botsOnline }\n}\n\nconst mapDispatchToProps = {\n  getBotBySocketId\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BreederJob)\n","import React from 'react';\nimport { Col, Form, Row } from 'react-bootstrap';\n\nconst LayerCoords = (props) => {\n    const {\n        onChange,\n        area,\n    } = props\n    return (\n        <Row>\n\n            <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\">\n                <Form.Label><span className='badge bg-primary text-white'>X Start</span></Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    value={area.xStart}\n                    onChange={(e) => { onChange(e, 'xStart') }}\n                />\n            </Form.Group>\n\n            <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\">\n                <Form.Label><span className='badge bg-warning text-dark'>Y Layer</span></Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    value={area.yLayer}\n                    onChange={(e) => { onChange(e, 'yLayer') }}\n                />\n            </Form.Group>\n\n            <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\">\n                <Form.Label><span className='badge bg-secondary text-white'>Z Start</span></Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    value={area.zStart}\n                    onChange={(e) => { onChange(e, 'zStart') }}\n                />\n            </Form.Group>\n\n            <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\">\n                <Form.Label><span className='badge bg-primary text-white'>X End</span></Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    value={area.xEnd}\n                    onChange={(e) => { onChange(e, 'xEnd') }}\n                />\n            </Form.Group>\n\n            <Form.Group as={Col} sm=\"4\" md=\"3\" lg=\"2\">\n                <Form.Label><span className='badge bg-secondary text-white'>Z End</span></Form.Label>\n                <Form.Control\n                    type=\"text\"\n                    value={area.zEnd}\n                    onChange={(e) => { onChange(e, 'zEnd') }}\n                />\n            </Form.Group>\n\n        </Row >\n    )\n}\n\nexport default LayerCoords;\n"],"names":["connect","reducers","configurationReducer","socket","selectedSocketId","props","farmArea","className","LayerCoords","area","onChange","event","type","copyFarm","target","value","emit","action","socketId","configToChange","id","Row","Col","Button","variant","onClick","mapDispatchToProps","getBotBySocketId","botsReducer","botsOnline","botConfig","find","e","undefined","handleUpdateAnimal","animal","console","log","Form","as","sm","md","lg","controlId","config","farmAnimal","seconds","cow","sheep","chicken","horse","donkey","llama","fox","bee","panda","wolf","cat","rabbit","pig","turtles","farmAreas","map","index","xStart","yLayer","zStart","xEnd","zEnd"],"sourceRoot":""}