{"version":3,"file":"static/js/533.6fba2018.chunk.js","mappings":"iQAiGMA,EAAqB,CACzBC,iBAAAA,EAAAA,IAGF,WAAeC,EAAAA,EAAAA,KAXS,SAACC,GACvB,IAAQC,EAAyBD,EAAzBC,qBAGR,MAAO,CAAEC,OAF4BD,EAA7BC,OAESC,iBAFoBF,EAArBE,oBASsBN,EAAxC,EA/FmB,SAACO,GAClB,IACEF,EAGEE,EAHFF,OACAC,EAEEC,EAFFD,iBACAL,EACEM,EADFN,iBAGF,GAAgCO,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYX,EAAiBK,GAC7BO,GAAM,UAAQD,EAAUC,eACvBA,EAAOC,SACdJ,EAAYK,KAAKC,UAAUH,EAAQ,KAAM,MACxC,CAACZ,EAAkBK,IAEtB,IAAMM,EAAYX,EAAiBK,GACnC,QAAkBW,IAAdL,EAA2B,OAAO,KA0CtC,OACE,+BACE,SAAC,IAAD,WACE,SAAC,IAAD,WACE,UAAC,IAAD,YACE,4DACA,SAAC,IAAD,CAAQM,UAAU,YAAYC,QA7CvB,WACf,IAAMN,GAAM,UAAQD,EAAUC,eACvBA,EAAOC,SACd,IAAMM,EAAOL,KAAKC,UAAUH,EAAQ,KAAM,GAEpCQ,EAAQ,UAAMT,EAAUU,MAC1BC,EAAUC,SAASC,cAAc,KACrCF,EAAQG,aAAa,OAAQ,iCAAmCC,mBAAmBP,IACnFG,EAAQG,aAAa,WAAYL,GAEjCE,EAAQK,MAAMC,QAAU,OACxBL,SAASM,KAAKC,YAAYR,GAE1BA,EAAQS,QAERR,SAASM,KAAKG,YAAYV,IA8BlB,8BACA,SAAC,IAAD,CAAQL,UAAU,OAAOgB,QAAQ,UAAUf,QA5BlC,WAEjB,IACE,IAAMgB,EAAapB,KAAKqB,MAAM3B,UACvB0B,EAAWb,KAClBe,QAAQC,IAAIH,GACZ9B,EAAOkC,KAAK,aAAc,CACxBC,OAAQ,eACR1B,SAAUR,EACVmC,MAAO,CACLC,eAAgB,iBAChBD,MAAON,KAGX,MAAOQ,GACP,OAAO,IAaD,0BAEA,SAAC,UAAD,CAAYzB,UAAU,OAAO0B,UAAU,kBAAvC,UACE,SAAC,YAAD,CACEC,GAAG,WACHC,KAAM,GACNL,MAAOhC,EACPsC,SAAU,SAACJ,GAAD,OAAOjC,EAAYiC,EAAEK,OAAOP","sources":["components/configurebot/FullConfig.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Button, Col, Form, Row } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { getBotBySocketId } from '../../actions/botsAction'\n\n\nconst FullConfig = (props) => {\n  const {\n    socket,\n    selectedSocketId,\n    getBotBySocketId\n  } = props\n\n  const [jsonText, setJsonText] = useState(\"\")\n\n  useEffect(() => {\n    const botConfig = getBotBySocketId(selectedSocketId)\n    const config = { ...botConfig.config }\n    delete config.socketId\n    setJsonText(JSON.stringify(config, null, 2))\n  }, [getBotBySocketId, selectedSocketId])\n\n  const botConfig = getBotBySocketId(selectedSocketId)\n  if (botConfig === undefined) { return null }\n\n\n  const download = () => {\n    const config = { ...botConfig.config }\n    delete config.socketId\n    const text = JSON.stringify(config, null, 2)\n\n    const filename = `${botConfig.name}`\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  const saveConfig = () => {\n\n    try {\n      const fullConfig = JSON.parse(jsonText);\n      delete fullConfig.name;\n      console.log(fullConfig)\n      socket.emit(\"sendAction\", {\n        action: 'changeConfig',\n        socketId: selectedSocketId,\n        value: {\n          configToChange: 'saveFullConfig',\n          value: fullConfig\n        }\n      });\n    } catch (e) {\n      return false;\n    }\n  }\n\n\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <Form>\n            <h4>List of all events used by bot</h4>\n            <Button className='mb-3 me-3' onClick={download}>Download Config</Button>\n            <Button className='mb-3' variant='success' onClick={saveConfig}>Save Config</Button>\n\n            <Form.Group className=\"mb-3\" controlId=\"fullConfigInput\">\n              <Form.Control\n                as=\"textarea\"\n                rows={30}\n                value={jsonText}\n                onChange={(e) => setJsonText(e.target.value)}\n              />\n            </Form.Group>\n\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nconst mapStateToProps = (reducers) => {\n  const { configurationReducer } = reducers\n  const { socket, selectedSocketId } = configurationReducer\n\n  return { socket, selectedSocketId }\n}\n\nconst mapDispatchToProps = {\n  getBotBySocketId\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullConfig)\n"],"names":["mapDispatchToProps","getBotBySocketId","connect","reducers","configurationReducer","socket","selectedSocketId","props","useState","jsonText","setJsonText","useEffect","botConfig","config","socketId","JSON","stringify","undefined","className","onClick","text","filename","name","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","variant","fullConfig","parse","console","log","emit","action","value","configToChange","e","controlId","as","rows","onChange","target"],"sourceRoot":""}